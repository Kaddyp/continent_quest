In Continents.tsx file 

### Return statement list of bug
1. Class is reserved keyword we can not use it in jsx, replace code with className :
    <h3 className={`font-${bold}`}>Continents:</h3>

2. In array map need to give key attribute to identify element, replace code with key attribute : 
    {data?.continents.map(({ name, index }) => (
        <div key={index} className={isEurope(name) && 'text-red-800'}>{name}</div>
    ))}

3. Avoid unnecessary div, use  React.Fragment or <></>
<>
    <h3 className={`font-${bold}`}>Continents:</h3>
    {data?.continents.map(({ name, index }) => (
        <div key={index} className={isEurope(name) ? 'text-red-800' : ''}>{name}</div>
    ))}
</>

4. loading and error state does not handle inside the component, It's essential to return the error or data Loading state to user:

  if (loading) return <div>Loading...</div>;
  if (error) return <div>Error: {error.message}</div>;

5. The type alias ContinenntsComponent contains a typographical error
  const Continents: ContinentsComponent

6. The interface ContinentsQery has a typographical error.
    interface ContinentsQuery {
        //Code
    }
7. The interface is defined inside the class component, need to write it outside the component or define it in a separate file.
   Name should be ContinentsProps for interface, Component should accept ContinentsProps

